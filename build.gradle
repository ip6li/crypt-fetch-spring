/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    def bcversion = '1.68'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1-jre'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.bouncycastle:bcprov-jdk15on:${bcversion}"
    implementation "org.bouncycastle:bcpkix-jdk15on:${bcversion}"
    implementation 'io.netty:netty-all:5.0.0.Alpha2'
    implementation ('com.mastfrog:netty-http-client:2.7.1') {
        exclude(group: 'io.netty')
    }
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'net.klakegg.pkix:pkix-ocsp:0.9.1'
    // https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.2.0.Final'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

compileJava.inputs.files(processResources)

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

application {
    // Define the main class for the application.
    mainClass = 'net.felsing.cryptfetchspring.CryptFetchSpringApplication'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
